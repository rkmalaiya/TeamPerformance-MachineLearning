teamdata <- read.csv("teamdata.csv")
teamdata_completeCases <- read.csv("teamdata_completeCases.csv")
View(teamdata)
teamdata.projectwise <- ddply(teamdata, ~ project, summarise,
jira_count = sum(jira_count),
svn_count = sum(svn_count),
email_count = sum(email_count),
jira_type = sum(jira_type),
jira_priority = sum(jira_priority),
votes = sum(votes),
watches = sum(watches)
)
View(teamdata.projectwise)
teamdata.projectwise <- ddply(teamdata, ~ project ~ date, summarise,
jira_count = sum(jira_count),
svn_count = sum(svn_count),
email_count = sum(email_count),
jira_type = sum(jira_type),
jira_priority = sum(jira_priority),
votes = sum(votes),
watches = sum(watches)
)
View(teamdata.projectwise)
teamdata.projectwise.dm <- dist(teamdata.projectwise[,-(1:2)])
str(teamdata.projectwise.dm)
teamdata.projectwise.hc <- hclust(teamdata.projectwise.dm)
str(teamdata.projectwise.dm)
str(teamdata.projectwise.hc)
plot(teamdata.projectwise.hc, col = unclass(teamdata.projectwise$project))
par(mfrow= c(1,1))
plot(teamdata.projectwise.hc, col = unclass(teamdata.projectwise$project))
teamdata.projectwise[,-(1:2)]
teamdata.projectwise.km = kmeans(teamdata.projectwise, centers = 7)
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 7)
str(teamdata.projectwise.km)
str(teamdata.projectwise.km$centers)
plot(teamdata.projectwise.km$centers[1,1:10], pch = 19, ylab = "Cluster Center", xlab = "")
plot(teamdata.projectwise.km$centers, pch = 19, ylab = "Cluster Center", xlab = "")
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 3)
str(teamdata.projectwise.km$centers)
plot(teamdata.projectwise.km$centers, pch = 19, ylab = "Cluster Center", xlab = "")
str(teamdata.projectwise.km$cluster)
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 7)
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)])
str(teamdata.projectwise.km$cluster)
teamdata.projectwise1 <- cbind(teamdata.projectwise, teamdata.projectwise.km$cluster)
View(teamdata.projectwise1)
teamdata.projectwise <- cbind(teamdata.projectwise, teamdata.projectwise.km$cluster)
plot(teamdata.projectwise)
plot(teamdata.projectwise[, c(-2, -10)])
View(teamdata.projectwise)
?cbind
teamdata.projectwise <- cbind(teamdata.projectwise, cluster = teamdata.projectwise.km$cluster)
View(teamdata.projectwise)
teamdata.projectwise <- ddply(teamdata, ~ project ~ date, summarise,
jira_count = sum(jira_count),
svn_count = sum(svn_count),
email_count = sum(email_count),
jira_type = sum(jira_type),
jira_priority = sum(jira_priority),
votes = sum(votes),
watches = sum(watches)
)
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)])
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 10)
str(teamdata.projectwise.km$cluster)
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 8)
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 8, nstart = 3)
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
teamdata.projectwise <- cbind(teamdata.projectwise, cluster = teamdata.projectwise.km$cluster)
plot(teamdata.projectwise[, c(-2, -10)])
View(teamdata.projectwise)
plot(teamdata.projectwise[, c(-1, -2, -10)])
if(!require(ggplot2)) {
install.packages("ggplot2")
require(ggplot2)
}
require(ggplot2)
What do I want
qplot(svn_count, date, data = teamdata.projectwise, color = project)
with(teamdata.projectwise,plot(svn_count, date, col = project))
par(mfrow= c(4,2))
lapply(names(teamdata.projectwise), function(x) {
with(teamdata.projectwise,plot(x, date, col = project))
})
names(teamdata.projectwise)[c(-1,-2)]
names(teamdata.projectwise)[c(-1,-2,-10)]
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
with(teamdata.projectwise,plot(x, date, col = project))
})
with(teamdata.projectwise,plot("svn_count", date, col = project))
plot(teamdata.projectwise[ ,"svn_count"], teamdata.projectwise$date, col = project)
plot(teamdata.projectwise[ ,"svn_count"], teamdata.projectwise$date, col = teamdata.projectwise$project)
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project)
})
par(mfrow= c(2,2))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project)
})
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project)
})
?plot
table(teamdata.projectwise)
table(teamdata.projectwise[,3])
table(teamdata.projectwise[,4])
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project, xlab = x, ylab = "Days", main = "Project-wise Activity for each data-point")
})
qplot(teamdata.projectwise)
plot(teamdata.projectwise)
qplot(teamdata.projectwise)
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project, xlab = x, ylab = "Days", main = "Project-wise Activity for each data-point")
})
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project, xlab = x, ylab = "Days", main = paste("Project-wise Activity for",x))
})
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
qplot(teamdata.projectwise[ ,x], teamdata.projectwise$date, color = teamdata.projectwise$project) #, xlab = x, ylab = "Days", main = paste("Project-wise Activity for",x))
})
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 8, nstart = 3)
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
par(mfrow= c(1,1))
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 8, nstart = 3)
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
teamdata.projectwise <- cbind(teamdata.projectwise, cluster = teamdata.projectwise.km$cluster)
View(teamdata.projectwise)
teamdata.projectwise <- mutate(teamdata.projectwise, cluster = teamdata.projectwise.km$cluster)
teamdata.projectwise <- ddply(teamdata, ~ project ~ date, summarise,
jira_count = sum(jira_count),
svn_count = sum(svn_count),
email_count = sum(email_count),
jira_type = sum(jira_type),
jira_priority = sum(jira_priority),
votes = sum(votes),
watches = sum(watches)
)
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 8, nstart = 3)
teamdata.projectwise <- mutate(teamdata.projectwise, cluster = teamdata.projectwise.km$cluster)
with(teamdata.projectwise, plot(x = project, cluster))
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$cluster, xlab = x, ylab = "Days", main = paste("Project-wise Activity for",x))
})
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$cluster, xlab = x, ylab = "Days", main = paste("Cluster distribution for",x))
})
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
par(mfrow= c(1,1))
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project, xlab = x, ylab = "Days", main = paste("Project-wise distribution for",x))
})
par(mfrow= c(1,1))
with(teamdata.projectwise, plot(x = project, cluster))
with(teamdata.projectwise, plot(x = project, cluster, xlab="Project Groups"), ylab = "Clusters")
with(teamdata.projectwise, plot(x = project, cluster, xlab="Project Groups", ylab = "Clusters"))
write.csv(teamdata.projectwise)
write.csv(teamdata.projectwise, file = "clusters.csv")
plot(teamdata.projectwise[, c(-1, -2, -10)], main = "Data-point distribution")
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/KMeansClustering.R')
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$cluster, xlab = x, ylab = "Days", main = paste("Cluster distribution for",x))
})
with(teamdata.projectwise, plot(x = project, cluster, xlab="Project Groups", ylab = "Clusters"))
par(mfrow= c(1,1))
with(teamdata.projectwise, plot(x = project, cluster, xlab="Project Groups", ylab = "Clusters"))
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 6, nstart = 3)
str(teamdata.projectwise.km$cluster)
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
?merge
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R')
View(all_activity_df)
View(email_df)
View(jira_df)
all_activity_df <- merge(email_df, svn_df, all = TRUE, by = c("name", "date", "project"))
View(all_activity_df)
all_activity_df <- merge(email_df, svn_df, by = c("name", "date", "project"))
View(all_activity_df)
View(svn_df)
all_activity_df <- merge(email_df, svn_df, all=FALSE, by = c("name", "date", "project"))
write.csv(all_activity_df, file = "teamdata.csv")
write.csv(all_activity_df, file = "teamdata.csv")
x <- data.frame(a="a1", b="b2")
x <- data.frame(a="a1", b="b1")
y <- data.frame(x="x2", y="y2")
y <- data.frame(a="x2", y="y2")
merge(x,y)
merge(x,y, all = TRUE)
x <- sample(x, replace = FALSE, size = 10)
x <- sample(email_df, replace = FALSE, size = 10)
x <- sample(email_df, replace = TRUE, size = 10)
x <- sample_n(email_df)
x <- sample_n(email_df, size = 10)
View(x)
y <- sample_n(svn_df, size = 10)
merge(x,y, all = TRUE)
all_activity_df <- merge(email_df, svn_df, all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df, svn_df, all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[1:10,], svn_df[1:10,], all=TRUE) #, by = c("name", "date", "project"))
View(all_activity_df)
all_activity_df <- merge(email_df[1:100,], svn_df[1:10,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[1:500,], svn_df[1:10,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[1:500,], svn_df[1:500,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[1:5000,], svn_df[1:500,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[1:5000,], svn_df[1:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[1:1000,], svn_df[1:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4000:5000,], svn_df[1:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4500:5000,], svn_df[4500:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4900:5000,], svn_df[4900:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4800:4900,], svn_df[4900:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4700:4800,], svn_df[4700:4800,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4700:4800,], svn_df[4800:4900,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4700:4800,], svn_df[4850:4900,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4700:4850,], svn_df[4850:4900,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4800:4850,], svn_df[4850:4900,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4800:5000,], svn_df[4850:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4950:5000,], svn_df[4850:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4900:5000,], svn_df[4850:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4800:5000,], svn_df[4850:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4850:5000,], svn_df[4850:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(all_activity_df, jira_df, all = TRUE, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4850:5000,], svn_df[4850:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4850:5000,], svn_df[4850:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4850:5000,], svn_df[4850:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4850:5000,], svn_df[4850:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4750:5000,], svn_df[4850:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4550:5000,], svn_df[4850:5000,], all=TRUE) #, by = c("name", "date", "project"))
all_activity_df <- merge(email_df[4550:5000,], svn_df[4500:5000,], all=TRUE) #, by = c("name", "date", "project"))
merge(email_df[4550:5000,], svn_df[4500:5000,], all=TRUE)
z <- merge(email_df[4550:5000,], svn_df[4500:5000,], all=TRUE)
z1 <- merge(email_df[email_df$name == "hive_t_5" & email_df$date == 16,],
svn_df[svn_df$name == "hive_t_5" & svn_df$date == 16,], all=TRUE)
View(`z1`)
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R')
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/KMeansClustering.R')
e1 <- email_df[email_df$name == "hive_t_5" & email_df$date == 16,]
e1 <- email_df[email_df$name == "hive_t_5" & email_df$date == 16,]
s1 <- svn_df[svn_df$name == "hive_t_5" & svn_df$date == 16,]
View(`e1`)
View(`s1`)
y <- data.frame(a=c("x2", "x3"), y=c("y2", "y3"))
View(y)
merge(x,y, all = TRUE)
x <- data.frame(a="a1", b="b1")
y <- data.frame(a=c("x2", "x3"), y=c("y2", "y3"))
merge(x,y, all = TRUE)
x <- data.frame(a="a1", b="b1")
y <- data.frame(a=c("a1", "x3"), y=c("a1", "y3"))
merge(x,y, all = TRUE)
merge(y,x, all = TRUE)
merge(e1,s1, all = TRUE)
merge(s1,e1, all = TRUE)
merge(e1,s1, all = TRUE)
s1 <- ddply(s1, ~ name ~ project ~ date, summarise, svn_count = sum(svn_count))
View(`s1`)
svn_df <- ddply(svn_df, ~ name ~ project ~ date, summarise, svn_count = sum(svn_count))
email_df <- ddply(email_df, ~ name ~ project ~ date, summarise, email_count = sum(email_count))
all_activity_df <- merge(email_df, svn_df, all=TRUE) #, by = c("name", "date", "project"))
View(jira_df)
jira_df <- ddply(jira_df, ~ name ~ project ~ date, summarise,
watches = sum(watches),
votes = sum(votes),
jira_count = sum(jira_count),
jira_type = max(jira_type),
jira_priority =  max(jira_priority),
)
jira_df <- ddply(jira_df, ~ name ~ project ~ date, summarise,
watches = sum(watches),
votes = sum(votes),
jira_count = sum(jira_count),
jira_type = max(jira_type),
jira_priority =  max(jira_priority)
)
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R')
ggarr <- list()
ddply(jira_df, ~ project, function(x){
g <- ggplot(x) + geom_histogram() + aes(name)
g <- g + facet_grid(.~project)
ggarr <<- append(ggarr,list(g))
0
})
do.call(grid.arrange,ggarr)
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R')
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R')
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R')
png("jira_distribution.png", width = 1300, height = 785)
ggarr <- list()
ddply(jira_df, ~ project, function(x){
g <- ggplot(x) + geom_histogram() + aes(name)
g <- g + facet_grid(.~project)
ggarr <<- append(ggarr,list(g))
0
})
do.call(grid.arrange,ggarr)
dev.off()
ggarr <- list()
ddply(jira_df, ~ project, function(x){
g <- ggplot(x) + geom_histogram() + aes(name)
g <- g + facet_grid(.~project)
ggarr <<- append(ggarr,list(g))
0
})
do.call(grid.arrange,ggarr)
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R')
teamdata <- read.csv("teamdata.csv")
teamdata_completeCases <- read.csv("teamdata_completeCases.csv")
if(!require(dplyr)) {
install.packages("dplyr")
require(dplyr)
}
if(!require(plyr)) {
install.packages("plyr")
require(plyr)
}
if(!require(ggplot2)) {
install.packages("ggplot2")
require(ggplot2)
}
teamdata.projectwise <- ddply(teamdata, ~ project ~ date, summarise,
jira_count = sum(jira_count),
svn_count = sum(svn_count),
email_count = sum(email_count),
jira_type = sum(jira_type),
jira_priority = sum(jira_priority),
votes = sum(votes),
watches = sum(watches)
)
teamdata.projectwise <- ddply(teamdata, ~ project ~ date, summarise,
jira_count = sum(jira_count),
svn_count = sum(svn_count),
email_count = sum(email_count),
jira_type = max(jira_type),
jira_priority = max(jira_priority),
votes = sum(votes),
watches = sum(watches)
)
teamdata.projectwise.dm <- dist(teamdata.projectwise[,-(1:2)])
teamdata.projectwise.hc <- hclust(teamdata.projectwise.dm)
par(mfrow= c(1,1))
plot(teamdata.projectwise.hc, col = unclass(teamdata.projectwise$project))
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 6, nstart = 3)
str(teamdata.projectwise.km$cluster)
par(mfrow= c(1,1))
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
teamdata.projectwise <- mutate(teamdata.projectwise, cluster = teamdata.projectwise.km$cluster)
plot(teamdata.projectwise[, c(-1, -2, -10)], main = "Data-point distribution")
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project, xlab = x, ylab = "Days", main = paste("Project-wise distribution for",x))
})
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$cluster, xlab = x, ylab = "Days", main = paste("Cluster distribution for",x))
})
par(mfrow= c(1,1))
with(teamdata.projectwise, plot(x = project, cluster, xlab="Project Groups", ylab = "Clusters"))
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R')
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R')
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R')
teamdata <- read.csv("teamdata.csv")
teamdata_completeCases <- read.csv("teamdata_completeCases.csv")
teamdata.projectwise <- ddply(teamdata, ~ project ~ date, summarise,
jira_count = sum(jira_count),
svn_count = sum(svn_count),
email_count = sum(email_count),
jira_type = max(jira_type),
jira_priority = max(jira_priority),
votes = sum(votes),
watches = sum(watches)
)
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 6, nstart = 3)
str(teamdata.projectwise.km$cluster)
par(mfrow= c(1,1))
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
teamdata.projectwise <- mutate(teamdata.projectwise, cluster = teamdata.projectwise.km$cluster)
plot(teamdata.projectwise[, c(-1, -2, -10)], main = "Data-point distribution")
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project, xlab = x, ylab = "Days", main = paste("Project-wise distribution for",x))
})
source('~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R')
teamdata <- read.csv("teamdata.csv")
teamdata_completeCases <- read.csv("teamdata_completeCases.csv")
teamdata.projectwise <- ddply(teamdata, ~ project ~ date, summarise,
jira_count = sum(jira_count),
svn_count = sum(svn_count),
email_count = sum(email_count),
jira_type = max(jira_type),
jira_priority = max(jira_priority),
votes = sum(votes),
watches = sum(watches)
)
par(mfrow= c(1,1))
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
teamdata.projectwise <- mutate(teamdata.projectwise, cluster = teamdata.projectwise.km$cluster)
plot(teamdata.projectwise[, c(-1, -2, -10)], main = "Data-point distribution")
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project, xlab = x, ylab = "Days", main = paste("Project-wise distribution for",x))
})
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$cluster, xlab = x, ylab = "Days", main = paste("Cluster distribution for",x))
})
par(mfrow= c(1,1))
with(teamdata.projectwise, plot(x = project, cluster, xlab="Project Groups", ylab = "Clusters"))
teamdata.projectwise <- ddply(teamdata, ~ name ~ date, summarise,
jira_count = sum(jira_count),
svn_count = sum(svn_count),
email_count = sum(email_count),
jira_type = max(jira_type),
jira_priority = max(jira_priority),
votes = sum(votes),
watches = sum(watches)
)
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 6, nstart = 3)
str(teamdata.projectwise.km$cluster)
par(mfrow= c(1,1))
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
plot(teamdata.projectwise[, c(-1, -2, -10)], main = "Data-point distribution")
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project, xlab = x, ylab = "Days", main = paste("Project-wise distribution for",x))
})
teamdata <- read.csv("teamdata.csv")
teamdata_completeCases <- read.csv("teamdata_completeCases.csv")
## Find patterns of activity of each group
# grouping data based on project
if(!require(dplyr)) {
install.packages("dplyr")
require(dplyr)
}
if(!require(plyr)) {
install.packages("plyr")
require(plyr)
}
if(!require(ggplot2)) {
install.packages("ggplot2")
require(ggplot2)
}
# Getting only Project-wise data
teamdata.projectwise <- ddply(teamdata, ~ name ~ date, summarise,
jira_count = sum(jira_count),
svn_count = sum(svn_count),
email_count = sum(email_count),
jira_type = max(jira_type),
jira_priority = max(jira_priority),
votes = sum(votes),
watches = sum(watches)
)
teamdata.projectwise.dm <- dist(teamdata.projectwise[,-(1:2)])
teamdata.projectwise.hc <- hclust(teamdata.projectwise.dm)
par(mfrow= c(1,1))
plot(teamdata.projectwise.hc, col = unclass(teamdata.projectwise$project))
par(mfrow= c(1,1))
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
teamdata.projectwise <- mutate(teamdata.projectwise, cluster = teamdata.projectwise.km$cluster)
plot(teamdata.projectwise[, c(-1, -2, -10)], main = "Data-point distribution")
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$project, xlab = x, ylab = "Days", main = paste("Project-wise distribution for",x))
})
par(mfrow= c(3,3))
lapply(names(teamdata.projectwise)[c(-1,-2,-10)], function(x) {
plot(teamdata.projectwise[ ,x], teamdata.projectwise$date, col = teamdata.projectwise$cluster, xlab = x, ylab = "Days", main = paste("Cluster distribution for",x))
})
legend(x=teamdata.projectwise$cluster)
legend(x=teamdata.projectwise$cluster)
legend(x=teamdata.projectwise$cluster, legend = "s")
teamdata.projectwise.km = kmeans(teamdata.projectwise[, -(1:2)], centers = 4, nstart = 3)
par(mfrow= c(1,1))
plot(teamdata.projectwise.km$cluster, pch = 19, ylab = "Cluster Center", xlab = "")
if(!require(EMClustering)) {
install.packages("EMClustering")
require(EMClustering)
}
if(!require(EMCluster)) {
install.packages("EMCluster")
require(EMCluster)
}
?emcluster
View(teamdata.projectwise)
ret <- init.EM(teamdata.projectwise[, -(1:2)], nclass = 2)
ret <- init.EM(teamdata.projectwise[, -(1:2)], nclass = 2)
teamdata.projectwise.em = assign.class(teamdata.projectwise[, -(1:2)], ret, return.all = FALSE)
modelName = ``EEE''
modelName = "EEE"
data = teamdata.projectwise[, -(1:2)]
z = unmap(teamdata.projectwise[, -(1:2)])
??unmap
if(!require(caTools)) {
install.packages("caTools")
require(caTools)
}
z = unmap(teamdata.projectwise[, -(1:2)])
unmap
?unmap
