View(t)
class(teamdata$watches)
ifelse(teamdata$watches == 0, 'a', 'b')
ifelse(teamdata$watches != 0, 'a', 'b')
ifelse (teamdata$watches == 0, NA, paste0(teamdata$watches,"WATCHES",length(unique(teamdata$name))))
teamdata.event <- teamdata %>% filter(name == 'cm_t1') %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(watches = ifelse (y$watches == 0, NA, paste0(y$watches,"WATCHES",length(unique(y$name))))
, watches_temp = y$watches
)
})
}
)
t <- teamdata.event %>% filter(name == 'cm_t1', date == 23)
View(t)
teamdata.event <- teamdata %>% filter(name == 'cm_t1') %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(watches = ifelse (y$watches == 0, NA, '2')
, watches_temp = y$watches
)
})
}
)
t <- teamdata.event %>% filter(name == 'cm_t1', date == 23)
View(t)
teamdata.event <- teamdata %>% filter(name == 'cm_t1') %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(watches = ifelse (y$watches == 0, 3, 2)
, watches_temp = y$watches
)
})
}
)
t <- teamdata.event %>% filter(name == 'cm_t1', date == 23)
View(t)
teamdata.event <- teamdata %>% filter(name == 'cm_t1') %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(watches = ifelse (y$watches1 == 0, NA, paste0(y$watches,"WATCHES",length(unique(y$name))))
, watches_temp = y$watches
)
})
}
)
teamdata.event <- teamdata %>% filter(name == 'cm_t1') %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(watches1 = ifelse (y$watches == 0, NA, paste0(y$watches,"WATCHES",length(unique(y$name))))
, watches_temp = y$watches
)
})
}
)
t <- teamdata.event %>% filter(name == 'cm_t1', date == 23)
View(t)
teamdata.event <- teamdata %>% filter(name == 'cm_t1') %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(watches1 = ifelse (y$watches == 0, NA, paste0(y$watches,"WATCHES",length(unique(y$name))))
, watches_temp = y$watches
)
})
}
)
t <- teamdata.event %>% filter(name == 'cm_t1', date == 23)
View(t)
teamdata.event <- teamdata %>% filter(name == 'cm_t1') %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(watches1 = ifelse (y$watches == 0, 'NA', paste0(y$watches,"WATCHES",length(unique(y$name))))
, watches_temp = y$watches
)
})
}
)
t <- teamdata.event %>% filter(name == 'cm_t1', date == 23)
View(t)
character(NA)
as.character(NA)
teamdata.event <- teamdata %>% filter(name == 'cm_t1') %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data(watches1 = as.character(ifelse (y$watches == 0, NA, paste0(y$watches,"WATCHES",length(unique(y$name)))))
, watches_temp = y$watches
)
})
}
)
teamdata <- read.csv("teamdata.csv")
teamdata$seconds <- sample(x =  1:(8*60),size = nrow(teamdata), replace = T)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = ifelse (y$email_count == 0, 'NA', paste0(y$email_count,"EMAIL",length(unique(y$name)))),
svn = ifelse (y$svn_count == 0, 'NA', paste0(y$svn_count,"SVN",length(unique(y$name)))),
watches = ifelse (y$watches == 0, 'NA', paste0(y$watches,"WATCHES",length(unique(y$name)))),
votes = ifelse (y$votes == 0, 'NA', paste0(y$votes,"VOTES",length(unique(y$name)))),
jira_count = ifelse (y$jira_count == 0, 'NA', paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name)))),
jira_type = ifelse (y$jira_type == 0, 'NA', paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name)))),
jira_priority = ifelse (y$jira_priority == 0, 'NA', paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name))))
)
})
}
)
View(teamdata.event)
?write.csv
write.csv(teamdata.event, file = "fp_growth.csv", na = "")
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = ifelse (y$email_count == 0, 'NA', paste0(y$email_count,"EMAIL",length(unique(y$name)))),
svn = ifelse (y$svn_count == 0, 'NA', paste0(y$svn_count,"SVN",length(unique(y$name)))),
watches = ifelse (y$watches == 0, 'NA', paste0(y$watches,"WATCHES",length(unique(y$name)))),
votes = as.character(ifelse (y$votes == 0, NA, paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = ifelse (y$jira_count == 0, 'NA', paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name)))),
jira_type = ifelse (y$jira_type == 0, 'NA', paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name)))),
jira_priority = ifelse (y$jira_priority == 0, 'NA', paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name))))
)
})
}
)
if(!require(dplyr)) {
install.packages('dplyr')
require(dplyr)
}
if(!require(plyr)) {
install.packages('plyr')
require(plyr)
}
if(!require(snow)) {
install.packages('snow')
require(snow)
}
size <- 1:nrow(teamdata)
teamdata <- read.csv("teamdata.csv")
teamdata$seconds <- sample(x =  1:(8*60),size = nrow(teamdata), replace = T)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = ifelse (y$email_count == 0, 'NA', paste0(y$email_count,"EMAIL",length(unique(y$name)))),
svn = ifelse (y$svn_count == 0, 'NA', paste0(y$svn_count,"SVN",length(unique(y$name)))),
watches = ifelse (y$watches == 0, 'NA', paste0(y$watches,"WATCHES",length(unique(y$name)))),
votes = as.character(ifelse (y$votes == 0, NA, paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = ifelse (y$jira_count == 0, 'NA', paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name)))),
jira_type = ifelse (y$jira_type == 0, 'NA', paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name)))),
jira_priority = ifelse (y$jira_priority == 0, 'NA', paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name))))
)
})
}
)
write.csv(teamdata.event, file = "fp_growth.csv", na = "")
View(teamdata.event)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = ifelse (y$email_count == 0, 'NA', paste0(y$email_count,"EMAIL",length(unique(y$name)))),
svn = ifelse (y$svn_count == 0, 'NA', paste0(y$svn_count,"SVN",length(unique(y$name)))),
watches = ifelse (y$watches == 0, 'NA', paste0(y$watches,"WATCHES",length(unique(y$name)))),
votes = as.character(ifelse (y$votes == 0, NA, paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = as.character(ifelse (y$jira_count == 0, NA, paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name))))),
jira_type = ifelse (y$jira_type == 0, 'NA', paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name)))),
jira_priority = ifelse (y$jira_priority == 0, 'NA', paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name))))
)
})
}
)
View(teamdata.event)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = ifelse (y$email_count == 0, 'NA', as.character(paste0(y$email_count,"EMAIL",length(unique(y$name))))),
svn = ifelse (y$svn_count == 0, 'NA', as.character(paste0(y$svn_count,"SVN",length(unique(y$name))))),
watches = ifelse (y$watches == 0, NA, as.character(paste0(y$watches,"WATCHES",length(unique(y$name))))),
votes = ifelse (y$votes == 0, NA, as.character(paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = ifelse (y$jira_count == 0, NA, as.character(paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name))))),
jira_type = ifelse (y$jira_type == 0, NA, as.character(paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name)))),
jira_priority = ifelse (y$jira_priority == 0, NA, as.character(paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name))))
)
})
}
)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = ifelse (y$email_count == 0, 'NA', as.character(paste0(y$email_count,"EMAIL",length(unique(y$name))))),
svn = ifelse (y$svn_count == 0, 'NA', as.character(paste0(y$svn_count,"SVN",length(unique(y$name))))),
watches = ifelse (y$watches == 0, NA, as.character(paste0(y$watches,"WATCHES",length(unique(y$name))))),
votes = ifelse (y$votes == 0, NA, as.character(paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = ifelse (y$jira_count == 0, NA, as.character(paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name))))),
jira_type = ifelse (y$jira_type == 0, NA, as.character(paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name))))),
jira_priority = ifelse (y$jira_priority == 0, NA, as.character(paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name)))))
)
})
}
)
write.csv(teamdata.event, file = "fp_growth.csv", na = "")
View(teamdata.event)
View(teamdata)
??read.transactions
??inspect
library(arules)
rules.all <- apriori(titanic.raw)
rules.all <- apriori(titanic.raw)
View(teamdata.event)
teamdata.event[,-(1:4)]
rules.all <- apriori(teamdata.event[,-(1:4)])
apply(teamdata.event[,-(1:4)], MARGIN = 2, as.factor)
teamdata.event[,-(1:4)] <- apply(teamdata.event[,-(1:4)], MARGIN = 2, as.factor)
View(teamdata.event)
write.csv(teamdata.event, file = "fp_growth.csv", na = "")
rules.all <- apriori(teamdata.event[,-(1:4)])
temp <- apply(teamdata.event[,-(1:4)], MARGIN = 2, as.factor)
apply(temp, MARGIN = 2, class)
tt <- as.factor(teamdata.event[,5])
class(tt)
temp <- apply(teamdata.event[,-(1:4)], MARGIN = 1, as.factor)
temp <- apply(teamdata.event[,-(1:4)], MARGIN = 2, as.factor)
apply(temp, MARGIN = 2, class)
temp <- apply(teamdata.event[,-(1:4)], MARGIN = 2, function(x) { as.factor(x)})
apply(temp, MARGIN = 2, class)
temp <- as.data.frame(unclass(teamdata.event[,-(1:4)]))
apply(temp, MARGIN = 2, class)
teamdata.event[,5] <- as.factor(teamdata.event[,5])
apply(teamdata.event, MARGIN = 2, class)
tt <- as.factor(teamdata.event[,5])
class(tt)
teamdata.event[,5] <- tt
class(teamdata.event[,5])
View(teamdata.event)
tt <- as.factor(teamdata.event[,5])
teamdata.event[,5] <- tt
tt <- as.factor(teamdata.event[,6])
teamdata.event[,6] <- tt
tt <- as.factor(teamdata.event[,7])
teamdata.event[,7] <- tt
tt <- as.factor(teamdata.event[,8])
teamdata.event[,8] <- tt
tt <- as.factor(teamdata.event[,9])
teamdata.event[,9] <- tt
tt <- as.factor(teamdata.event[,10])
teamdata.event[,10] <- tt
tt <- as.factor(teamdata.event[,11])
teamdata.event[,11] <- tt
summary(teamdata.event)
class(teamdata.event)
View(teamdata.event)
teamdata <- read.csv("teamdata.csv")
teamdata$seconds <- sample(x =  1:(8*60),size = nrow(teamdata), replace = T)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = ifelse (y$email_count == 0, NA, as.character(paste0(y$email_count,"EMAIL",length(unique(y$name))))),
svn = ifelse (y$svn_count == 0, NA, as.character(paste0(y$svn_count,"SVN",length(unique(y$name))))),
watches = as.character(ifelse (y$watches == 0, NA, paste0(y$watches,"WATCHES",length(unique(y$name))))),
votes = ifelse (y$votes == 0, NA, as.character(paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = ifelse (y$jira_count == 0, NA, as.character(paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name))))),
jira_type = ifelse (y$jira_type == 0, NA, as.character(paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name))))),
jira_priority = ifelse (y$jira_priority == 0, NA, as.character(paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name)))))
)
})
}
)
if(!require(dplyr)) {
install.packages('dplyr')
require(dplyr)
}
if(!require(plyr)) {
require(plyr)
install.packages('plyr')
}
size <- 1:nrow(teamdata)
teamdata <- read.csv("teamdata.csv")
size <- 1:nrow(teamdata)
teamdata$seconds <- sample(x =  1:(8*60),size = nrow(teamdata), replace = T)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = ifelse (y$email_count == 0, NA, as.character(paste0(y$email_count,"EMAIL",length(unique(y$name))))),
svn = ifelse (y$svn_count == 0, NA, as.character(paste0(y$svn_count,"SVN",length(unique(y$name))))),
watches = as.character(ifelse (y$watches == 0, NA, paste0(y$watches,"WATCHES",length(unique(y$name))))),
votes = ifelse (y$votes == 0, NA, as.character(paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = ifelse (y$jira_count == 0, NA, as.character(paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name))))),
jira_type = ifelse (y$jira_type == 0, NA, as.character(paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name))))),
jira_priority = ifelse (y$jira_priority == 0, NA, as.character(paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name)))))
)
})
}
)
View(teamdata.event)
teamdata.event <- data.frame(email = ,
svn = character(0),
watches = character(0),
votes = character(0),
jira_count = character(0),
jira_type = character(0),
jira_priority = character(0)
)
teamdata.event <- data.frame(email = character(0),
svn = character(0),
watches = character(0),
votes = character(0),
jira_count = character(0),
jira_type = character(0),
jira_priority = character(0)
)
apply(teamdata.event, MARGIN = 2, class)
str(teamdata.event)
str(teamdata.event[,1])
class(teamdata.event[,1])
if(!require(dplyr)) {
install.packages('dplyr')
require(dplyr)
}
if(!require(plyr)) {
install.packages('plyr')
require(plyr)
}
teamdata <- read.csv("teamdata.csv")
size <- 1:nrow(teamdata)
teamdata$seconds <- sample(x =  1:(8*60),size = nrow(teamdata), replace = T)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
t <- data.frame(email = character(0),
svn = character(0),
watches = character(0),
votes = character(0),
jira_count = character(0),
jira_type = character(0),
jira_priority = character(0)
)
rbind(t, data.frame(email = ifelse (y$email_count == 0, NA, as.character(paste0(y$email_count,"EMAIL",length(unique(y$name))))),
svn = ifelse (y$svn_count == 0, NA, as.character(paste0(y$svn_count,"SVN",length(unique(y$name))))),
watches = as.character(ifelse (y$watches == 0, NA, paste0(y$watches,"WATCHES",length(unique(y$name))))),
votes = ifelse (y$votes == 0, NA, as.character(paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = ifelse (y$jira_count == 0, NA, paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name)))),
jira_type = ifelse (y$jira_type == 0, NA, as.character(paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name))))),
jira_priority = ifelse (y$jira_priority == 0, NA, as.character(paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name)))))
))
})
}
)
View(teamdata.event)
teamdata <- read.csv("teamdata.csv")
size <- 1:nrow(teamdata)
teamdata$seconds <- sample(x =  1:(8*60),size = nrow(teamdata), replace = T)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
rbind(t, data.frame(email = as.character(ifelse (y$email_count == 0, NA, paste0(y$email_count,"EMAIL",length(unique(y$name))))),
)
))
teamdata <- read.csv("teamdata.csv")
size <- 1:nrow(teamdata)
teamdata$seconds <- sample(x =  1:(8*60),size = nrow(teamdata), replace = T)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = as.character(ifelse (y$email_count == 0, NA, paste0(y$email_count,"EMAIL",length(unique(y$name))))),
svn = as.character(ifelse (y$svn_count == 0, NA, paste0(y$svn_count,"SVN",length(unique(y$name))))),
watches = as.character(ifelse (y$watches == 0, NA, paste0(y$watches,"WATCHES",length(unique(y$name))))),
votes = as.character(ifelse (y$votes == 0, NA, paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = as.character(ifelse (y$jira_count == 0, NA, paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name))))),
jira_type = as.character(ifelse (y$jira_type == 0, NA, paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name))))),
jira_priority = as.character(ifelse (y$jira_priority == 0, NA, paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name)))))
))
}
}
)
teamdata <- read.csv("teamdata.csv")
size <- 1:nrow(teamdata)
teamdata$seconds <- sample(x =  1:(8*60),size = nrow(teamdata), replace = T)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = as.character(ifelse (y$email_count == 0, NA, paste0(y$email_count,"EMAIL",length(unique(y$name))))),
svn = as.character(ifelse (y$svn_count == 0, NA, paste0(y$svn_count,"SVN",length(unique(y$name))))),
watches = as.character(ifelse (y$watches == 0, NA, paste0(y$watches,"WATCHES",length(unique(y$name))))),
votes = as.character(ifelse (y$votes == 0, NA, paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = as.character(ifelse (y$jira_count == 0, NA, paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name))))),
jira_type = as.character(ifelse (y$jira_type == 0, NA, paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name))))),
jira_priority = as.character(ifelse (y$jira_priority == 0, NA, paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name)))))
)
}
}
))
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = as.character(ifelse (y$email_count == 0, NA, paste0(y$email_count,"EMAIL",length(unique(y$name))))),
svn = as.character(ifelse (y$svn_count == 0, NA, paste0(y$svn_count,"SVN",length(unique(y$name))))),
watches = as.character(ifelse (y$watches == 0, NA, paste0(y$watches,"WATCHES",length(unique(y$name))))),
votes = as.character(ifelse (y$votes == 0, NA, paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = as.character(ifelse (y$jira_count == 0, NA, paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name))))),
jira_type = as.character(ifelse (y$jira_type == 0, NA, paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name))))),
jira_priority = as.character(ifelse (y$jira_priority == 0, NA, paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name)))))
)
})
}
)
temp <- apply(teamdata.event[,-(1:4)], MARGIN = 2, function(x) { as.factor(x)})
apply(teamdata.event, MARGIN = 2, class)
temp <- as.data.frame(unclass(teamdata.event[,-(1:4)]))
apply(teamdata.event, MARGIN = 2, class)
tt <- as.factor(teamdata.event[,5])
teamdata.event[,5] <- tt
str(teamdata.event)
write.csv(teamdata.event, file = "fp_growth.csv", na = "")
library(arules)
rules.all <- apriori(teamdata.event[,-(1:4)])
inspect(rules.all)
rules.all <- apriori(teamdata.event[,-(1:4)])
inspect(rules.all)
load("titanic.raw.rdata")
rules.all <- apriori(titanic.raw)
inspect(rules.all)
View(titanic.raw)
sum(complete.cases(teamdata.event))
rules.all <- apriori(teamdata.event[,-(1:4)])
inspect(rules.all)
rules.all <- apriori(titanic.raw)
inspect(rules.all)
rules.all <- apriori(teamdata.event[,-(1:4)], control = c(verbose=F), parameter = c(minlen=2, supp = 0.005, conf=0.8))
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=F), parameter = list(minlen=2, supp = 0.005, conf=0.8))
inspect(rules.all)
quality(rules.all) <- round(quality(rules.all), digits=3)
inspect(rules.all)
rules.sorted <- sort(rules, by = 'lift')
rules.sorted <- sort(rules.all, by = 'lift')
rules.sorted
inspect(rules.sorted)
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=F), parameter = list(minlen=2, supp = 0.05, conf=0.8))
quality(rules.all) <- round(quality(rules.all), digits=3)
inspect(rules.all)
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=F), parameter = list(minlen=2, supp = 0.005, conf=0.8))
quality(rules.all) <- round(quality(rules.all), digits=3)
inspect(rules.all)
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=F), parameter = list(minlen=2, supp = 0.01, conf=0.8))
quality(rules.all) <- round(quality(rules.all), digits=3)
inspect(rules.all)
rules.sorted <- sort(rules.all, by = 'lift')
inspect(rules.sorted)
teamdata <- read.csv("teamdata.csv")
size <- 1:nrow(teamdata)
teamdata$seconds <- sample(x =  1:(4*60),size = nrow(teamdata), replace = T)
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = ifelse (y$email_count == 0, '1EMAIL1', paste0(y$email_count,"EMAIL",length(unique(y$name))))),
svn = ifelse (y$svn_count == 0, '1SVN1', paste0(y$svn_count,"SVN",length(unique(y$name))))),
watches = ifelse (y$watches == 0, '1WATCHES1', paste0(y$watches,"WATCHES",length(unique(y$name))))),
votes = ifelse (y$votes == 0, '1VOTES1', paste0(y$votes,"VOTES",length(unique(y$name))))),
jira_count = ifelse (y$jira_count == 0, '1JIRA_COUNT1', paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name))))),
teamdata.event <- teamdata %>% ddply( ~ project ~ name ~ date ~ seconds, function(x) {
ddply(x, ~seconds, function(y) {
data.frame(email = ifelse (y$email_count == 0, '1EMAIL1', paste0(y$email_count,"EMAIL",length(unique(y$name)))),
svn = ifelse (y$svn_count == 0, '1SVN1', paste0(y$svn_count,"SVN",length(unique(y$name)))),
watches = ifelse (y$watches == 0, '1WATCHES1', paste0(y$watches,"WATCHES",length(unique(y$name)))),
votes = ifelse (y$votes == 0, '1VOTES1', paste0(y$votes,"VOTES",length(unique(y$name)))),
jira_count = ifelse (y$jira_count == 0, '1JIRA_COUNT1', paste0(y$jira_count,"JIRA_COUNT",length(unique(y$name)))),
jira_type = ifelse (y$jira_type == 0, '1JIRA_TYPE1', paste0(y$jira_type,"JIRA_TYPE",length(unique(y$name)))),
jira_priority = ifelse (y$jira_priority == 0, '1JIRA_PRIORITY1', paste0(y$jira_priority,"JIRA_PRIORITY",length(unique(y$name))))
)
})
}
)
View(teamdata.event)
str(teamdata.event)
write.csv(teamdata.event, file = "fp_growth.csv", na = "")
sum(complete.cases(teamdata.event))
library(arules)
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=F), parameter = list(minlen=2, supp = 0.01, conf=0.8))
quality(rules.all) <- round(quality(rules.all), digits=3)
inspect(rules.all)
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=F), parameter = list(minlen=2, supp = 0.05, conf=0.8))
quality(rules.all) <- round(quality(rules.all), digits=3)
inspect(rules.all)
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=T), parameter = list(minlen=2, supp = 0.05, conf=0.8))
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=T), parameter = list(minlen=2, supp = 0.5, conf=0.8))
quality(rules.all) <- round(quality(rules.all), digits=3)
inspect(rules.all)
rules.sorted <- sort(rules.all, by = 'lift')
inspect(rules.sorted)
library(arulesViz)
install.packages("arulesViz")
install.packages("arulesViz")
library(arulesViz)
plot(rules.all)
plot(rules.all, method = "grouped")
plot(rules.all, method = "graph")
plot(rules.all, method = "graph", control = list(type = 'items'))
plot(rules.all, method = "paracoord", control = list(record = TRUE))
plot(rules.all, method = "paracoord", control = list(reorder = TRUE))
plot(rules.all, method = "grouped")
plot(rules.all, method = "grouped" ,control = list(iter.max = 76))
plot(rules.all, method = "grouped" ,control = list(clusters = 76))
plot(rules.all, method = "grouped")
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=T), parameter = list(minlen=5, supp = 0.005, conf=0.8))
quality(rules.all) <- round(quality(rules.all), digits=3)
inspect(rules.all)
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=T), parameter = list(minlen=5, supp = 0.05, conf=0.8))
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=T), parameter = list(minlen=5, supp = 0.01, conf=0.8))
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=T), parameter = list(minlen=5, supp = 0.09, conf=0.8))
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=T), parameter = list(minlen=5, supp = 0.1, conf=0.8))
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=T), parameter = list(minlen=5, supp = 0.5, conf=0.8))
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=T), parameter = list(minlen=5, supp = 0.4, conf=0.8))
rules.all <- apriori(teamdata.event[,-(1:4)], control = list(verbose=T), parameter = list(minlen=5, supp = 0.2, conf=0.8))
quality(rules.all) <- round(quality(rules.all), digits=3)
inspect(rules.all)
rules.sorted <- sort(rules.all, by = 'lift')
inspect(rules.sorted)
plot(rules.all)
plot(rules.all, method = "grouped")
plot(rules.all, method = "graph")
plot(rules.all, method = "graph", control = list(type = 'items'))
plot(rules.all, method = "paracoord", control = list(reorder = TRUE))
png("FPGrowth1.png", width = 1390, height = 732)
plot(rules.all)
dev.off()
png("FPGrowth2.png", width = 1390, height = 732)
plot(rules.all, method = "grouped")
dev.off()
png("FPGrowth3.png", width = 1390, height = 732)
plot(rules.all, method = "graph")
dev.off()
png("FPGrowth4.png", width = 1390, height = 732)
plot(rules.all, method = "graph", control = list(type = 'items'))
dev.off()
png("FPGrowth5.png", width = 1390, height = 732)
plot(rules.all, method = "paracoord", control = list(reorder = TRUE))
dev.off()
