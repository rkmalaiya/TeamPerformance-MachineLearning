{
    "contents" : "if(!require(plyr)) {\n  install.packages(\"plyr\")\n  require(plyr)\n}\nemail_df <- read.delim(\"email_jan\", header = FALSE, sep = \"\\t\", fill = TRUE)\nsvn_df <- read.delim(\"svn_jan\", header = FALSE, sep = \"\\t\", fill = TRUE)\njira_df <- read.delim(\"jira_jan\", header = FALSE, sep = \"\\t\", fill = TRUE)\n\ncolnames(email_df) <- c(\"name\", \"date\", \"project\", \"email_count\")\ncolnames(svn_df) <- c(\"name\", \"date\", \"project\", \"svn_count\")\ncolnames(jira_df) <- c(\"name\", \"date\", \"project\", \"jira_type\", \"jira_priority\", \"votes\", \"watches\", \"jira_count\" )\n\nemail_df$project <- as.character(email_df$project)\nsvn_df$project <- as.character(svn_df$project)\njira_df$project <- as.character(jira_df$project)\n\nemail_df$email_count <- gsub(\"MAIL_CSV\", \"\", email_df$email_count)\nemail_df$email_count <- as.numeric(email_df$email_count)\nemail_df$email_count <- email_df$email_count + 1\n\n\nsvn_df$svn_count <- gsub(\"SVN_LOG\", \"\", svn_df$svn_count)\nsvn_df$svn_count <- as.numeric(svn_df$svn_count)\nsvn_df$svn_count <- svn_df$svn_count + 1\n\n\njira_df$jira_count <- gsub(\"ISSUE_LOG\", \"\", jira_df$jira_count)\njira_df$jira_count <- as.numeric(jira_df$jira_count)\njira_df$jira_count <- jira_df$jira_count + 1\n\njira_df$votes <- gsub(\"votes\", \"\", jira_df$votes)\njira_df$votes <- as.numeric(jira_df$votes)\n\njira_df$watches <- gsub(\"watches\", \"\", jira_df$watches)\njira_df$watches <- as.numeric(jira_df$watches)\n\njira_df$jira_count <- gsub(\"ISSUE_LOG\", \"\", jira_df$jira_count)\njira_df$jira_count <- as.numeric(jira_df$jira_count)\n\nsvn_df[svn_df$project == 'hadoop-tools', 'project'] <- 'hbase'\nsvn_df[svn_df$project == 'MISCELLANEOUS' & svn_df$svn_count  >= 2, \"project\"] <- \"hive\"\nsvn_df[svn_df$project == 'MISCELLANEOUS' & svn_df$svn_count  < 2, \"svn_count\"] <- NA ## \"hadoop-yarn-project\"\nsvn_df[svn_df$project == 'hadoop-project', \"project\"] <- \"pig\"\n\n# Removing incomplete cases\nemail_df <- email_df[complete.cases(email_df),]\nsvn_df <- svn_df[complete.cases(svn_df),]\njira_df <- jira_df[complete.cases(jira_df),]\n\n# convert hbase to miscal\n\n#email_unique_name <- unique(email_df$name)\n#svn_unique_name <- unique(svn_df$name)\n#jira_unique_name <- unique(jira_df$name)\n\nname_list <- rep(1:9, length.out = 2114)\nname_list <- lapply(name_list, function(x) {paste0(\"t\",x)})\nname_list <- as.character(name_list)\nemail_df$name <- as.factor(email_df$name)\nlevels(email_df$name) <- name_list\n\nname_list <- rep(1:9, length.out = 115)\nname_list <- lapply(name_list, function(x) {paste0(\"t\",x)})\nname_list <- as.character(name_list)\nsvn_df$name <- as.factor(svn_df$name)\nlevels(svn_df$name) <- name_list\n\nname_list <- rep(1:9, length.out = 137)\nname_list <- lapply(name_list, function(x) {paste0(\"t\",x)})\nname_list <- as.character(name_list)\njira_df$name <- as.factor(jira_df$name)\nlevels(jira_df$name) <- name_list\n\n# extracting only days\nsvn_df$date <- as.character(svn_df$date)\nsvn_df$date <- gsub(\"-\", \"\", svn_df$date)\n\nsvn_df$date <- substring(svn_df$date,7)\nemail_df$date <- substring(email_df$date,7)\njira_df$date <- substring(jira_df$date,7)\n\nsvn_df$date <- as.numeric(svn_df$date)\njira_df$date <- as.numeric(jira_df$date)\nemail_df$date <- as.numeric(email_df$date)\n\nsvn_df <- svn_df[!is.na(svn_df$date), ]\njira_df <- jira_df[!is.na(jira_df$date), ]\nemail_df <- email_df[!is.na(email_df$date), ]\n\n\njira_df$jira_type <- gsub(pattern = \"Sub-tasktype\", replacement = \"Subtasktype\", x = jira_df$jira_type)\njira_df$jira_type <- gsub(pattern = \"New Featuretype\", replacement = \"NewFeaturetype\", x = jira_df$jira_type)\njira_df$jira_type <- gsub(pattern = \"type\", replacement = \"\", x = jira_df$jira_type)\n\n# giving weightage to JIRA Types\njira_types_df <- list(Bug = 1, Improvement = 2, Subtask = 0.5, NewFeature = 4, \n                            Task = 5, Test = 3, Bu = 1, Impr = 5, Wish = 2)\n\npriority_df <- list(Majorpriority = 4, Blockerpriority = 2, Trivialpriority = 3, Minorpriority = 1, \n                              Criticalpriority = 5)\n\njira_df$jira_type <- gsub(pattern = names(jira_types_df)[1], replacement = jira_types_df[[names(jira_types_df)[1]]], jira_df$jira_type)\njira_df$jira_type <- gsub(pattern = names(jira_types_df)[2], replacement = jira_types_df[[names(jira_types_df)[2]]], jira_df$jira_type)\njira_df$jira_type <- gsub(pattern = names(jira_types_df)[3], replacement = jira_types_df[[names(jira_types_df)[3]]], jira_df$jira_type)\njira_df$jira_type <- gsub(pattern = names(jira_types_df)[4], replacement = jira_types_df[[names(jira_types_df)[4]]], jira_df$jira_type)\njira_df$jira_type <- gsub(pattern = names(jira_types_df)[5], replacement = jira_types_df[[names(jira_types_df)[5]]], jira_df$jira_type)\njira_df$jira_type <- gsub(pattern = names(jira_types_df)[6], replacement = jira_types_df[[names(jira_types_df)[6]]], jira_df$jira_type)\njira_df$jira_type <- gsub(pattern = names(jira_types_df)[7], replacement = jira_types_df[[names(jira_types_df)[7]]], jira_df$jira_type)\njira_df$jira_type <- gsub(pattern = names(jira_types_df)[8], replacement = jira_types_df[[names(jira_types_df)[8]]], jira_df$jira_type)\n\njira_df$jira_priority <- gsub(pattern = names(priority_df)[1], replacement = priority_df[[names(priority_df)[1]]], jira_df$jira_priority)\njira_df$jira_priority <- gsub(pattern = names(priority_df)[2], replacement = priority_df[[names(priority_df)[2]]], jira_df$jira_priority)\njira_df$jira_priority <- gsub(pattern = names(priority_df)[3], replacement = priority_df[[names(priority_df)[3]]], jira_df$jira_priority)\njira_df$jira_priority <- gsub(pattern = names(priority_df)[4], replacement = priority_df[[names(priority_df)[4]]], jira_df$jira_priority)\njira_df$jira_priority <- gsub(pattern = names(priority_df)[5], replacement = priority_df[[names(priority_df)[5]]], jira_df$jira_priority)\n\njira_df$jira_type <- as.integer(jira_df$jira_type)\njira_df$jira_priority <- as.integer(jira_df$jira_priority)\n\n#lapply(names(jira_types_df), function(x) {\n#  jira_df$jira_type <- gsub(pattern = x, replacement = jira_types_df[[x]], jira_df$jira_type)\n  \n#})\n\nproj_abr <- list(\"hadoop-common-project\" = \"cm\", \"hadoop-hdfs-project\" = \"hs\", \n                 \"hadoop-mapreduce-project\" = \"mr\", \"hadoop-yarn-project\" = \"yn\", \n                 \"hbase\" = \"hb\", \"hive\" = \"hv\", \"pig\" = \"pg\"\n                 )\n\nsvn_df <- mutate(svn_df, name = paste0(proj_abr[project],\"_\",name))\nsvn_df$name <- as.factor(svn_df$name)\nsvn_df$project <- as.factor(svn_df$project)\nemail_df <- mutate(email_df, name = paste0(proj_abr[project],\"_\",name))\nemail_df$name <- as.factor(email_df$name)\njira_df <- mutate(jira_df, name = paste0(proj_abr[project],\"_\",name))\njira_df$name <- as.factor(jira_df$name)\n\n#Summarizing data\n\n#svn_df <- ddply(svn_df, ~ name ~ project ~ date, summarise, svn_count = sum(svn_count))\nemail_df <- ddply(email_df, ~ name ~ project ~ date, summarise, email_count = sum(email_count))\njira_df <- ddply(jira_df, ~ name ~ project ~ date, summarise, \n                 watches = sum(watches),\n                 votes = sum(votes),\n                 jira_count = sum(jira_count),\n                 jira_type = max(jira_type),\n                 jira_priority =  max(jira_priority)\n                 )\n\nall_activity_df <- merge(email_df, svn_df, all=TRUE) #, by = c(\"name\", \"date\", \"project\"))\nall_activity_df <- merge(all_activity_df, jira_df, all = TRUE, by = c(\"name\", \"date\", \"project\"))\n\nsum(complete.cases(all_activity_df))\nall_activity_completeCases_df <- all_activity_df[complete.cases(all_activity_df),]\n\nall_activity_df[is.na(all_activity_df)] <- 0\n\n## Lets replace project names\nall_activity_df$project <- as.factor(all_activity_df$project)\nlevels(all_activity_df$project) <- c(\"team1\", \"team2\", \"team3\", \"team4\", \"team5\", \"team6\", \"team7\")\n\nwrite.csv(all_activity_df, file = \"teamdata.csv\")\nwrite.csv(all_activity_completeCases_df, file = \"teamdata_completeCases.csv\")\n\nrequire(\"ggplot2\")\nrequire(\"dplyr\")\n\nstr(svn_df)\npar(mfrow= c(3,3))\n\nlibrary(grid)\n\nif(!require(gridExtra)) {\n  install.packages(\"gridExtra\")\n  require(gridExtra)\n}\n\n\"\nvplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)\ngrid.newpage()\npushViewport(viewport(layout = grid.layout(nrow = 4, ncol = 2)), recording = FALSE)\n \n\"\ngrid.newpage()\n\nggarr <- list()\npng(\"svn_distribution.png\", width = 2000, height = 928)\nddply(svn_df, ~ project, function(x){\n  g <- ggplot(x) + geom_histogram() + aes(name)\n  g <- g + facet_grid(.~project)\n  ggarr <<- append(ggarr,list(g))\n  0  \n})\ndo.call(grid.arrange,ggarr)\ndev.off()\n\npng(\"email_distribution.png\", width = 2000, height = 928)\nggarr <- list()\nddply(email_df, ~ project, function(x){\n  g <- ggplot(x) + geom_histogram() + aes(name)\n  g <- g + facet_grid(.~project)\n  ggarr <<- append(ggarr,list(g))\n  0  \n})\ndo.call(grid.arrange,ggarr)\ndev.off()\n\npng(\"jira_distribution.png\", width = 2000, height = 928)\nggarr <- list()\nddply(jira_df, ~ project, function(x){\n  g <- ggplot(x) + geom_histogram() + aes(name)\n  g <- g + facet_grid(.~project)\n  ggarr <<- append(ggarr,list(g))\n  0  \n})\ndo.call(grid.arrange,ggarr)\ndev.off()\n\n\n\"\n\nplots = lapply(1:5, function(.x) qplot(1:10,rnorm(10), main=paste(plot,.x)))\nrequire(gridExtra)\ndo.call(grid.arrange,  plots)\nclass(plots)\nclass(qparr)\n\n\"",
    "created" : 1429464320351.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1707060770",
    "id" : "4AB102CC",
    "lastKnownWriteTime" : 1430393271,
    "path" : "~/Nikita/TeamPerformance-MachineLearning/r-workspace/ParsingFiles.R",
    "project_path" : "ParsingFiles.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}